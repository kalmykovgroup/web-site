version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    container_name: website_postgres
    image: postgres:16-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER_FILE: /run/secrets/db_user
      POSTGRES_PASSWORD_FILE: /run/secrets/db_password
      POSTGRES_DB: web_site
      PGDATA: /var/lib/postgresql/data/pgdata
    secrets:
      - db_user
      - db_password
    ports:
      - "5444:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$(cat /run/secrets/db_user)"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - website_network

  # ASP.NET Core Web API
  webapi:
    container_name: website_api
    build:
      context: .
      dockerfile: WebSite.Api/Dockerfile
    restart: unless-stopped
    ports:
      - "5000:8080"
      - "5001:8081"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:8080
    secrets:
      - db_user
      - db_password
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - website_network
    volumes:
      - ./logs:/app/logs

volumes:
  postgres_data:
    driver: local

networks:
  website_network:
    driver: bridge

secrets:
  db_user:
    file: ./secrets/db_user.txt
  db_password:
    file: ./secrets/db_password.txt